"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[906],{1870:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var t=r(5893),o=r(1151);const n={custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.preptree.meta.json"},i="org.osbuild.ostree.preptree",l={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.preptree",title:"org.osbuild.ostree.preptree",description:"\x3c!--",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.ostree.preptree.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.preptree",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.preptree",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.preptree.meta.json",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/osbuild/osbuild/tree/main/stages/org.osbuild.ostree.preptree.meta.json"},sidebar:"developer",previous:{title:"org.osbuild.ostree.post-copy",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.post-copy"},next:{title:"org.osbuild.ostree.pull",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.ostree.pull"}},a={},d=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"orgosbuildostreepreptree",children:"org.osbuild.ostree.preptree"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Transforms the tree to an ostree layout"})}),"\n",(0,t.jsxs)(s.p,{children:["Creates a basic fs tree in OSTree layout[1] from scratch and then picks\nthe relevenat bits from the tree and moves them over.\nThen uses ",(0,t.jsx)(s.code,{children:"rpm-ostree compose"}),' to transform a "normal" file system tree\ninto an OSTree conforming layout (see [1]). Among other things the main\nsteps are:']}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"moves /etc to /usr/etc"}),"\n",(0,t.jsx)(s.li,{children:"move /boot to /usr/lib/ostree-boot"}),"\n",(0,t.jsx)(s.li,{children:"potentially moving /var/lib/rpm"}),"\n",(0,t.jsx)(s.li,{children:"re-creates the initramfs (via dracut)"}),"\n",(0,t.jsx)(s.li,{children:"adds altfiles module to NSS"}),"\n",(0,t.jsx)(s.li,{children:"Re-compiles SELinux policy (semodule -nB)"}),"\n",(0,t.jsx)(s.li,{children:"Migrates /usr/etc/{passwd, group} to /usr/lib/"}),"\n",(0,t.jsx)(s.li,{children:"Postprocess SELinux policy"}),"\n",(0,t.jsx)(s.li,{children:"Convert /var to use tmpfiles.d"}),"\n",(0,t.jsxs)(s.li,{children:["Prepares symlinks","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"/usr/local -> /var/usrlocal"}),"\n",(0,t.jsx)(s.li,{children:"/var/lib/alternatives -> /usr/lib/alternatives"}),"\n",(0,t.jsx)(s.li,{children:"/var/lib/vagrant -> /usr/lib/vagrant"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["copies the rpmdb\nThe configuration options, ",(0,t.jsx)(s.code,{children:"etc_group_members"})," corresponds to the\nTreefile[2] option of rpm-ostree. In brief: The groups mentioned\nin ",(0,t.jsx)(s.code,{children:"etc_group_members"})," will be stored in /etc/groups instead of\n/usr/etc/groups (which is read-only). Therefore all groups that\nhuman users need to be part of.\n[1] ",(0,t.jsx)(s.a,{href:"https://ostreedev.github.io/ostree/adapting-existing/",children:"https://ostreedev.github.io/ostree/adapting-existing/"}),"\n[2] ",(0,t.jsx)(s.a,{href:"https://rpm-ostree.readthedocs.io/en/latest/manual/treefile/",children:"https://rpm-ostree.readthedocs.io/en/latest/manual/treefile/"})]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "properties": {\n    "etc_group_members": {\n      "description": "Array of group names to still keep in /etc/group",\n      "type": "array",\n      "items": {\n        "type": "string"\n      }\n    },\n    "initramfs-args": {\n      "description": "Array of arguments passed to dracut",\n      "type": "array",\n      "items": {\n        "type": "string"\n      }\n    },\n    "tmp-is-dir": {\n      "description": "Create a regular directory for /tmp",\n      "type": "boolean",\n      "default": true\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:"{}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,s,r)=>{r.d(s,{Z:()=>l,a:()=>i});var t=r(7294);const o={},n=t.createContext(o);function i(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);